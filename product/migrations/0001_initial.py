# Generated by Django 5.1.1 on 2024-09-05 12:24

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.MinLengthValidator(5)])),
                ('brand', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5)])),
                ('category', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5)])),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('image', models.ImageField(blank=True, default='/def/d.png', null=True, upload_to='product_image/')),
                ('num_review', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('count_stock', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
                'db_table': 'Product',
                'constraints': [models.UniqueConstraint(fields=('name',), name='name_unique'), models.CheckConstraint(condition=models.Q(('name__gte', 5)), name='name_gte_5'), models.CheckConstraint(condition=models.Q(('brand__gte', 5)), name='brand_gte_5'), models.CheckConstraint(condition=models.Q(('category__gte', 5)), name='category_gte_5'), models.CheckConstraint(condition=models.Q(('price__gte', 0)), name='price_gte_0'), models.CheckConstraint(condition=models.Q(('num_review__gte', 0)), name='num_review_gte_0'), models.CheckConstraint(condition=models.Q(('count_stock__gte', 0)), name='count_stock_gte_0')],
            },
        ),
    ]
